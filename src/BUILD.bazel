package(default_visibility = ["//visibility:public"])

load("@angular//:index.bzl", "ng_module")

ng_module(
    name = "src",
    srcs = glob(["*.ts"]),
    tsconfig = "//:tsconfig.json",
    deps = [
        "//schema:car_ts_proto",
        "@rxjs",
    ]
)

# Needed because the devserver only loads static files that appear under this
# package.
genrule(
    name = "zone.js",
    srcs = ["//:node_modules/zone.js/dist/zone.min.js"],
    outs = ["zone.min.js"],
    cmd = "cp $< $@",
)

load("@build_bazel_rules_typescript//:defs.bzl", "ts_devserver")

ts_devserver(
    name = "devserver",
    entry_module = "api_schemas_with_bazel/src/main",
    scripts = ["//:angular_bundles"],
    serving_path = "/bundle.min.js",
    static_files = [
        ":zone.js",
        "index.html",
        ":protobufjs",
    ],
    deps = ["//src"],
    bootstrap = ["@build_bazel_rules_typescript//:protobufjs_bootstrap_scripts"],
)

load("@build_bazel_rules_nodejs//:defs.bzl", "rollup_bundle", "nodejs_binary")

genrule(
    name = "protobufjs",
    srcs = [
      "@build_bazel_rules_typescript_protobufs_compiletime_deps//:node_modules/protobufjs/dist/minimal/protobuf.min.js",
      "@build_bazel_rules_typescript_protobufs_compiletime_deps//:node_modules/long/dist/long.js",
    ],
    outs = [
      "protobuf.min.js",
      "long.js"
    ],
    cmd = "outs=($(OUTS)); d=$$(dirname $${outs[0]}); for s in $(SRCS); do cp $$s $$d; done",
)

rollup_bundle(
    name = "bundle",
    entry_point = "src/main",
    deps = ["//src"],
    globals = {
        "long": "Long",
        "protobufjs/minimal": "protobuf",
    },
    node_modules = "//:node_modules",
)

nodejs_binary(
    name = "prodserver",
    args = ["./src"],
    data = [
        "index.html",
        ":bundle",
        ":zone.js",
        ":protobufjs",
    ],
    templated_args = ["--port=8000"],
    entry_point = "http-server/bin/http-server",
)
