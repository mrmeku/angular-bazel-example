package(default_visibility = ["//visibility:public"])

load("@angular//:index.bzl", "ng_module")
load("@io_bazel_rules_closure//closure:defs.bzl", "closure_js_library")    

ng_module(
    name = "src",
    srcs = glob(["*.ts"]),
    tsconfig = ":tsconfig.json",
    deps = ["//src/hello-world"],
)

# Needed because the devserver only loads static files that appear under this
# package.
genrule(
    name = "zone.js",
    srcs = ["//:node_modules/zone.js/dist/zone.min.js"],
    outs = ["zone.min.js"],
    cmd = "cp $< $@",
)

load("@build_bazel_rules_typescript//:defs.bzl", "ts_devserver")

ts_devserver(
    name = "devserver",
    entry_module = "angular_bazel_example/src/main",
    scripts = ["//:angular_bundles"],
    serving_path = "/bundle.js",
    static_files = [
        ":zone.js",
        "index.html",
    ],
    deps = ["//src"],
)

load("@build_bazel_rules_typescript//internal:build_defs.bzl", "closure_ts_binary")

# NOTE: This rule requires that you have a node modules directory at the root of your workspace
# containing @angular packages, zone.js, and hammerjs.
closure_ts_binary(
    name = "bundle",
    deps = [
        "//:closure_angular_bundles",
        "//src"
    ],
)

load("@build_bazel_rules_nodejs//:defs.bzl", "nodejs_binary")

nodejs_binary(
    name = "prodserver",
    entry_point = "angular_bazel_example_prod_deps/node_modules/lite-server/bin/lite-server",
    templated_args = ["--baseDir=src"],
    node_modules = "@angular_bazel_example_prod_deps//:node_modules",
    data = [
        ":zone.min.js",
        ":index.html",
        ":bundle.js",
    ],
)
